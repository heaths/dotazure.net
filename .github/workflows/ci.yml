name: ci

on:
  pull_request:
  push:
    branches:
    - main
  workflow_call:
    inputs:
      configuration:
        description: Build configuration
        required: false
        type: string
        default: Debug
    outputs:
      ArtifactId:
        description: Name of the artifact
        value: ${{ jobs.test.outputs.ArtifactId }}
      PackageVersion:
        description: Package version
        value: ${{ jobs.test.outputs.PackageVersion }}
      TargetName:
        description: The assembly base file name
        value: ${{ jobs.test.outputs.TargetName }}

permissions:
  contents: read

env:
  CONFIGURATION: "${{ inputs.configuration || 'Debug' }}"
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        - windows-latest
        dotnet-version: ['8.0.x']
        target: ['net8.0']
        include:
        - os: ubuntu-latest
          dotnet-version: '8.0.x'
          release: true
        - os: windows-latest
          dotnet-version: '8.0.x'
          target: net48
    outputs:
      ArtifactId: ${{ steps.pack.outputs.PackageId }}
      PackageVersion: ${{ steps.pack.outputs.PackageVersion }}
      TargetName: ${{ steps.build.outputs.TargetName }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        cache: true
        cache-dependency-path: '**/packages.lock.json'
    - name: Build
      id: build
      run: dotnet build --configuration "$CONFIGURATION"
    - name: Test
      run: dotnet test --configuration "$CONFIGURATION" --framework '${{ matrix.target }}' --no-build
    - name: Pack
      id: pack
      run: dotnet pack --configuration "$CONFIGURATION" --no-build --output 'bin/${{ inputs.configuration }}'
    - name: Upload package
      if: inputs.configuration == 'Release' && matrix.release
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.pack.outputs.PackageId }}
        path: |
          bin/${{ inputs.configuration }}/*.nupkg
          bin/${{ inputs.configuration }}/*.snupkg

  analyze:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Check spelling
      uses: streetsidesoftware/cspell-action@v6
      with:
        config: .cspell.json
